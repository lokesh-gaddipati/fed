{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red12\green14\blue18;\red224\green232\blue240;\red91\green98\blue110;
}
{\*\expandedcolortbl;;\cssrgb\c5098\c6667\c9020;\cssrgb\c90196\c92941\c95294;\cssrgb\c43137\c46275\c50588;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
arrlist=[];\
def move(board,goal,v):\
    a=board.index('0')\
    list=\{\};\
    if(a-3>-1):#top\
        l1=board[:];\
        temp=l1[a-3]\
        l1[a-3]='0'\
        l1[a]=temp\
        if l1 not in arrlist:\
            list["top"]=l1;\
            arrlist.append(l1);\
    if a not in [2,5,8]:#right\
        l4=board[:];\
        temp=l4[a+1]\
        l4[a+1]='0'\
        l4[a]=temp\
        if l4 not in arrlist:\
            list["right"]=l4;\
            arrlist.append(l4)\
    if(a+3<9):#bottom\
        l2=board[:];\
        temp=l2[a+3]\
        l2[a+3]='0'\
        l2[a]=temp\
        if l2 not in arrlist:\
            list["bottom"]=l2;\
            arrlist.append(l2);\
    if a not in [0,3,6]:#left\
        l3=board[:];\
        temp=l3[a-1]\
        l3[a-1]='0'\
        l3[a]=temp\
        if l3 not in arrlist:\
            list["left"]=l3;\
            arrlist.append(l3)\
    solve(list,goal,v)        \
def solve(l,goal,v):\
    c=[];\
    value=list(l.values());\
    side=list(l.keys());\
    for i in value:\
        if(i!=goal):\
            count=v;\
            for j in range(9):\
                if i[j]!=goal[j]:\
                    count+=1;\
            c.append(count-1)\
        else:\
            print(side[value.index(i)],"==>",v,"+0")\
            for k in range(0,9,3):\
                print(i[k],i[k+1],i[k+2],sep=" ",end="\\n");\
            print("Goal state found")\
            print("no.of states",v)\
            return\
    print(side[c.index(min(c))],"==>",v,"+",min(c)-v)\
    for i in range(0,9,3):\
          print(value[c.index(min(c))][i],value[c.index(min(c))][i+1],value[c.index(min(c))][i+2],sep=" ",end="\\n");\
    v+=1;    \
    move(value[c.index(min(c))],goal,v)\
initial=input("initial state").split(" ")\
goal=input("goal state").split(" ")\
move(initial,goal,1)
\f1\fs28 \cf3 \
\pard\pardeftab720\qr\partightenfactor0

\f0\fs24 \cf4 \cb2 1\cb1 \
\cb2 2\cb1 \
\
\cb2 3\cb1 \
\cb2 4\cb1 \
\cb2 5\cb1 \
\cb2 6\cb1 \
\cb2 7\cb1 \
\cb2 8\cb1 \
\cb2 9\cb1 \
\cb2 10\cb1 \
\cb2 11\cb1 \
\cb2 12\cb1 \
\cb2 13\cb1 \
\cb2 14\cb1 \
\cb2 15\cb1 \
\cb2 16\cb1 \
\cb2 17\cb1 \
\cb2 18\cb1 \
\cb2 19\cb1 \
\cb2 20\cb1 \
\cb2 21\cb1 \
\cb2 22\cb1 \
\cb2 23\cb1 \
\cb2 24\cb1 \
\cb2 25\cb1 \
\cb2 26\cb1 \
\cb2 27\cb1 \
\cb2 28\cb1 \
\cb2 29\cb1 \
\cb2 30\cb1 \
\cb2 31\cb1 \
\cb2 32\cb1 \
\cb2 33\cb1 \
\cb2 34\cb1 \
\cb2 35\cb1 \
\cb2 36\cb1 \
\cb2 37\cb1 \
\cb2 38\cb1 \
\
\cb2 39\cb1 \
\cb2 40\cb1 \
\cb2 41\cb1 \
\cb2 42\cb1 \
\cb2 43\cb1 \
\cb2 44\cb1 \
\cb2 45\cb1 \
\cb2 46\cb1 \
\cb2 47\cb1 \
\cb2 48\cb1 \
\cb2 49\cb1 \
\cb2 50\cb1 \
\cb2 51\cb1 \
\cb2 52\cb1 \
\cb2 53\cb1 \
\cb2 54\cb1 \
\cb2 55\cb1 \
\cb2 56\cb1 \
\cb2 57\cb1 \
\cb2 58\cb1 \
\cb2 59\cb1 \
\cb2 60\cb1 \
\cb2 61\cb1 \
\cb2 62\cb1 \
\cb2 63\cb1 \
}